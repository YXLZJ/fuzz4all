#include <iostream>
#include <string_view>
#include <vector>
#include <algorithm>

struct Transaction {
    std::string from;
    std::string to;
    double amount;
};

std::ostream& operator<<(std::ostream& os, const Transaction& t) {
    return os << "From: " << t.from << ", To: " << t.to << ", Amount: $" << t.amount;
}

int main() {
    std::vector<Transaction> transactions = {
        {"Alice", "Bob", 100.5},
        {"Charlie", "Dave", 200.75},
        {"Eve", "Frank", 300.9}
    };

    std::string_view filter = "[amount > 150]";

    auto filteredTransactions = transactions | std::views::filter([&](const Transaction& t) {
        return t.amount > 150;
    });

    for (const auto& transaction : filteredTransactions) {
        std::cout << transaction << '\n';
    }

    return 0;
}