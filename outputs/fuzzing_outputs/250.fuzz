#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

template<typename T1, typename T2>
struct pair {
    T1 first;
    T2 second;
};

void print_pair(const pair<int, int>& p) {
    cout << "(" << p.first << ", " << p.second << ")";
}

template<typename T1, typename T2>
vector<pair<T1, T2>> sort_pairs(const vector<pair<T1, T2>>& v) {
    vector<pair<T1, T2>> sorted;
    for (auto it = v.begin(); it != v.end(); ++it) {
        if (*it.first < *it.second) {
            sorted.push_back(*it);
        }
    }
    return sorted;
}

int main() {
    vector<pair<int, int>> pairs = {{10, 5}, {3, 7}, {8, 2}};
    auto sorted_pairs = sort_pairs(pairs);
    
    cout << "Sorted Pairs:" << endl;
    for (const auto& p : sorted_pairs) {
        print_pair(p);
        cout << '\n';
    }

    return 0;
}