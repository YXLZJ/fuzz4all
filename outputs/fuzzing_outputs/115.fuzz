#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <functional>

int main() {
    std::vector<std::pair<char, int>> data = {{'a', 1}, {'b', 2}, {'c', 3}};
    
    auto sum_of_second_elements = [](const std::vector<std::pair<char, int>>& v) {
        return std::accumulate(v.begin(), v.end(), 0,
                               [](int acc, const std::pair<char, int>& p) {
                                   return acc + p.second;
                               });
    };
    
    auto filter_by_first_element = [](const char& c) {
        return [c](const std::pair<char, int>& p) {
            return p.first == c;
        };
    };
    
    const char target_character = 'b';
    auto filtered_data = std::copy_if(data.begin(), data.end(), 
                                      std::back_inserter(std::vector<std::pair<char, int>>()), 
                                      filter_by_first_element(target_character));
    
    auto sum = sum_of_second_elements(filtered_data);
    std::cout << "Sum of second elements for pairs with first element '" << target_character << "': " << sum << '\n';
    
    return 0;
}